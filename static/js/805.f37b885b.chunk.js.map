{"version":3,"file":"static/js/805.f37b885b.chunk.js","mappings":"8JAUA,MA+BA,EA/B8CA,IAGvC,IAADC,EAAA,IAHyC,QAC7CC,EAAO,gBACPC,GACDH,EAQC,OACEI,EAAAA,EAAAA,MAAA,MACEC,SAAU,EACVC,QAASA,IAAMH,EAAgBD,EAAQK,MACvCC,UAXmBC,IAEP,UAAVA,EAAEC,KACJP,EAAgBD,EAAQK,KAC1B,EAQEI,MAAO,CAAEC,OAAQ,WACjB,iCAAAC,OAAgCX,EAAQY,KAAKC,QAC7C,qBAAAF,OAAoBX,EAAQK,MAAQS,SAAA,EAEpCC,EAAAA,EAAAA,KAAA,MAAI,aAAW,cAAcC,MAAOhB,EAAQY,KAAKC,OAAOC,SACrDd,EAAQY,KAAKC,UAEhBE,EAAAA,EAAAA,KAAA,MAAI,aAAW,gBAAgBC,MAAOhB,EAAQY,KAAKK,SAASH,SACpC,QADoCf,EACzDC,EAAQY,KAAKK,gBAAQ,IAAAlB,EAAAA,EAAI,UAGzB,E,aCpBT,MAmDA,EAnDsDD,IAK/C,IALgD,kBAErDoB,EAAiB,YACjBC,EAAW,oBACXC,GACDtB,EACC,MAAMuB,GAAWC,EAAAA,EAAAA,MAEXC,EAAsBJ,EAAcC,EACpCI,EAAqBD,EAAsBH,EAG3CK,EAAuBC,IAE3BL,EAAS,YAADV,OAAae,GAAO,EAG9B,OACExB,EAAAA,EAAAA,MAAA,SAAOyB,UAAU,gBAAeb,SAAA,EAChCC,EAAAA,EAAAA,KAAA,WAASY,UAAU,kBAAiBb,SAAC,6DAErCC,EAAAA,EAAAA,KAAA,SAAAD,UACEZ,EAAAA,EAAAA,MAAA,MAAAY,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIa,MAAM,MAAKd,SAAC,iBAChBC,EAAAA,EAAAA,KAAA,MAAIa,MAAM,MAAKd,SAAC,wBAGpBC,EAAAA,EAAAA,KAAA,SAAAD,SACGI,EAAkBW,OAAS,EAC1BX,EACGY,MAAMN,EAAoBD,GAC1BQ,KAAK/B,IACJe,EAAAA,EAAAA,KAACiB,EAAAA,EAAa,CAAAlB,UACZC,EAAAA,EAAAA,KAACkB,EAAU,CAETjC,QAASA,EACTC,gBAAiBwB,GAFZzB,EAAQK,WAOrBU,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAImB,QAAS,EAAGzB,MAAO,CAAE0B,UAAW,SAAUC,QAAS,QAAStB,SAAC,qCAMjE,C","sources":["components/CountryRow.tsx","components/CountriesTable.tsx"],"sourcesContent":["import React from \"react\";\nimport { Country } from \"../types/Country\";\n\ntype CountryRowProps = {\n  country: Country;\n  //singld country object from the array of countries\n  onSelectCountry: (code: string) => void;\n  //function to set the specific country by the country code used with the handlekeydown function so the user can use the keyboard to select\n};\n\nconst CountryRow: React.FC<CountryRowProps> = ({\n  country,\n  onSelectCountry,\n}) => {\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    //want to make sure you can do everything by keyboard and hitting enter and not just mouse for accessibility\n    if (e.key === \"Enter\") {\n      onSelectCountry(country.cca3);\n    }\n  };\n\n  return (\n    <tr\n      tabIndex={0}\n      onClick={() => onSelectCountry(country.cca3)}\n      onKeyDown={handleKeyDown}\n      style={{ cursor: \"pointer\" }}\n      aria-label={`view details for ${country.name.common}`} //for screen readers ti be able to access\n      data-testid={`row-${country.cca3}`} //help with testing\n    >\n      <td data-label=\"Common Name\" title={country.name.common}>\n        {country.name.common}\n      </td>\n      <td data-label=\"Official Name\" title={country.name.official}>\n        {country.name.official ?? \"N/A\"}\n        {/* in case some countries do not have an official name */}\n      </td>\n    </tr>\n  );\n};\n\nexport default CountryRow;\n","import React from \"react\";\nimport { Country } from \"../types/Country\";\nimport { useNavigate } from \"react-router-dom\";\n\n//component import\nimport CountryRow from \"./CountryRow\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\ntype CountriesTableProps = {\n  filteredCountries: Country[];\n  // Filtered list of countries used in the table\n  currentPage: number;\n  //the current page the user is on (changes when they push the prev or next buttons)\n  amtCountriesPerPage: number;\n  //amount of items in the list that are displayed at one time\n};\n\nconst CountriesTable: React.FC<CountriesTableProps> = ({\n  //this displays the entire array of countries in table form with filtering and pagination\n  filteredCountries,\n  currentPage,\n  amtCountriesPerPage,\n}) => {\n  const navigate = useNavigate(); //navigate to a different page with react router dom\n\n  const indexOfFirstCountry = currentPage * amtCountriesPerPage;\n  const indexOfLastCountry = indexOfFirstCountry - amtCountriesPerPage;\n  //these are for the pagination so that we know where to slice- cannot slice immediately bc it messes up the pagination total pages so just do it before we list\n\n  const handleSelectCountry = (code: string) => {\n    //passing this country code in the url which i have defined in the react router - in app.tsx\n    navigate(`/country/${code}`); //navigates to the country detail page\n  };\n\n  return (\n    <table className=\"country-table\">\n    <caption className=\"visually-hidden\">Table listing countries common and their official names</caption> \n    {/* won't visually show but screen readers can read it */}\n    <thead>\n      <tr>\n        <th scope=\"col\">Common Name</th>\n        <th scope=\"col\">Official Name</th>\n      </tr>\n    </thead>\n    <tbody>\n      {filteredCountries.length > 0 ? (\n        filteredCountries\n          .slice(indexOfLastCountry, indexOfFirstCountry)\n          .map((country) => (\n            <ErrorBoundary>\n              <CountryRow\n                key={country.cca3}\n                country={country}\n                onSelectCountry={handleSelectCountry}\n              />\n            </ErrorBoundary>\n          ))\n      ) : (\n        <tr>\n          <td colSpan={2} style={{ textAlign: \"center\", padding: \"1rem\" }}>\n            Sorry, no countries found.\n          </td>\n        </tr>\n      )}\n    </tbody>\n  </table>\n);\n};\nexport default CountriesTable;\n"],"names":["_ref","_country$name$officia","country","onSelectCountry","_jsxs","tabIndex","onClick","cca3","onKeyDown","e","key","style","cursor","concat","name","common","children","_jsx","title","official","filteredCountries","currentPage","amtCountriesPerPage","navigate","useNavigate","indexOfFirstCountry","indexOfLastCountry","handleSelectCountry","code","className","scope","length","slice","map","ErrorBoundary","CountryRow","colSpan","textAlign","padding"],"sourceRoot":""}